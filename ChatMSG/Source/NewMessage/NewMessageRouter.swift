//
//  NewMessageRouter.swift
//  ChatMSG
//
//  Created by Julia on 2023/04/26.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewMessageRoutingLogic {
    func receiverRouteToSender(_ receiver: String)
    func senderRouteToDatePick(_ sender: String)
    func datePickRouteToMessageType(_ date: Date)
    func messageTypeRouteToSituation(type: String, writingStyle: String)
    func situationRouteToResult(_ situation: String)
    func routeToMessageList()
}

protocol NewMessageDataPassing {
    var dataStore: NewMessageDataStore? { get }
}

final class NewMessageRouter: NewMessageRoutingLogic, NewMessageDataPassing {
    
    static let shared = NewMessageRouter()
    
    weak var recevierVC: ReceiverViewController?
    weak var senderVC: SenderViewController?
    weak var datePickVC: DatePickViewController?
    weak var typeVC: MessageTypeViewController?
    weak var situationVC: SituationViewController?
    weak var resultVC: ResultViewController?
    
    var dataStore: NewMessageDataStore?
    
    func receiverRouteToSender(_ receiver: String) {
        let senderVC = SenderViewController()
        recevierVC?.navigationController?.pushViewController(senderVC, animated: true)
        dataStore?.receiver = receiver
    }
    
    func senderRouteToDatePick(_ sender: String) {
        let datePickVC = DatePickViewController()
        senderVC?.navigationController?.pushViewController(datePickVC, animated: true)
        dataStore?.sender = sender
    }
    
    func datePickRouteToMessageType(_ date: Date) {
        let typeVC = MessageTypeViewController()
        datePickVC?.navigationController?.pushViewController(typeVC, animated: true)
        dataStore?.date = date
    }
    
    func messageTypeRouteToSituation(type: String, writingStyle: String) {
        let situationVC = SituationViewController()
        typeVC?.navigationController?.pushViewController(situationVC, animated: true)
        dataStore?.type = type
        dataStore?.writingStyle = writingStyle
    }
    
    func situationRouteToResult(_ situation: String) {
        let resultVC = ResultViewController()
        situationVC?.navigationController?.pushViewController(resultVC, animated: true)
        dataStore?.situation = situation
    }
    
    func routeToMessageList() {
        resultVC?.navigationController?.popToRootViewController(animated: true)
    }
    
}
