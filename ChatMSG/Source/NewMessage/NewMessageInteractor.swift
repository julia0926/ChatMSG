//
//  NewMessageInteractor.swift
//  ChatMSG
//
//  Created by Julia on 2023/04/26.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewMessageBusinessLogic {
    func fetchNewMessage(request: NewMessage.makeNewMessage.Request)
}

protocol NewMessageDataStore {
    var newMessage: String? { get }
}

final class NewMessageInteractor: NewMessageBusinessLogic, NewMessageDataStore {
    var presenter: NewMessagePresentationLogic?
    private var worker: NewMessageWorker?
    var newMessage: String?
    
    init(presenter: NewMessagePresentationLogic = NewMessagePresenter(),
         worker: NewMessageWorker = NewMessageWorker()) {
        self.presenter = presenter
        self.worker = worker
    }
  
    // MARK: - fetchNewMessage
    func fetchNewMessage(request: NewMessage.makeNewMessage.Request) {
        guard let worker = worker else { return }
        Task { @MainActor in
            let message = try await worker.requestNewMessage(title: "사과 메세지")
            let response = NewMessage.makeNewMessage.Response(newMessage: message)
            presenter?.presentNewMessage(response: response)
            
            // TODO: 에러 헨들링
        }
    
    }

}
