//
//  MessageDetailViewController.swift
//  ChatMSG
//
//  Created by Julia on 2023/05/04.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@MainActor
protocol MessageDetailDisplayLogic: AnyObject {
    func displaySomething(viewModel: MessageDetail.Something.ViewModel)
}

final class MessageDetailViewController: UIViewController, MessageDetailDisplayLogic {
    var interactor: MessageDetailBusinessLogic?
    var router: (MessageDetailRoutingLogic & MessageDetailDataPassing)?
    
    // MARK: - Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.setup()
    }
    
    // MARK: - Setup
    
    private func setup() {
        let viewController = self
        let interactor = MessageDetailInteractor()
        let presenter = MessageDetailPresenter()
        let router = MessageDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: -  UIComponent
    private let titleLabel: UILabel = {
        let label = UILabel()
        return label
    }()
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setUpLayout()
        doSomething()
        self.view.backgroundColor = .brown
    }
    
    private func setUpLayout() {
        
    }
    
    // VIP Cycle Start
    func doSomething() {
        let request = MessageDetail.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    // MARK: - Display Logic
  
    func displaySomething(viewModel: MessageDetail.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
    
}
